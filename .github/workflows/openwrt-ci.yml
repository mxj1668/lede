# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: 编译

on:
  schedule:
    - cron: 0 22 */5 * *
  release:
    types: [published]
  push:
    branches: master
    
jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: 准备结束
        uses: actions/checkout@v2
        with:
          ref: master

      - name: 清理空间
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          
      - name: 自定义插件主题。
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          rm -rf package/lean/luci-theme-argon 
          git clone -b 18.06 https://github.com/garypang13/luci-theme-edge.git                                
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git  
          git clone https://github.com/jerrykuku/luci-app-argon-config.git   
      - name: 更新文件
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      
      - name: 生成配置
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_NODEJS_14=y
          CONFIG_NODEJS_ICU_SMALL=y
          CONFIG_PACKAGE_UnblockNeteaseMusic=y
          # CONFIG_PACKAGE_adbyby is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          # CONFIG_PACKAGE_etherwake is not set
          CONFIG_PACKAGE_ipt2socks=y
          # CONFIG_PACKAGE_iptables-mod-ipsec is not set
          # CONFIG_PACKAGE_kmod-crypto-cbc is not set
          # CONFIG_PACKAGE_kmod-crypto-deflate is not set
          # CONFIG_PACKAGE_kmod-crypto-des is not set
          # CONFIG_PACKAGE_kmod-crypto-echainiv is not set
          # CONFIG_PACKAGE_kmod-crypto-md5 is not set
          # CONFIG_PACKAGE_kmod-ipsec is not set
          # CONFIG_PACKAGE_kmod-ipt-ipsec is not set
          # CONFIG_PACKAGE_kmod-iptunnel6 is not set
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          CONFIG_PACKAGE_libatomic=y
          # CONFIG_PACKAGE_libgmp is not set
          CONFIG_PACKAGE_libnghttp2=y
          CONFIG_PACKAGE_libuv=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          CONFIG_PACKAGE_luci-app-argon-config=y
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs is not set
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          CONFIG_PACKAGE_luci-app-netdata=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-upnp is not set
          # CONFIG_PACKAGE_luci-app-uugamebooster is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=y
          CONFIG_PACKAGE_luci-theme-edge=y
          # CONFIG_PACKAGE_miniupnpd is not set
          CONFIG_PACKAGE_netdata=y
          # CONFIG_PACKAGE_nlbwmon is not set
          CONFIG_PACKAGE_node=y
          # CONFIG_PACKAGE_qBittorrent-static is not set
          # CONFIG_PACKAGE_samba36-server is not set
          # CONFIG_PACKAGE_strongswan is not set
          CONFIG_PACKAGE_trojan=y
          # CONFIG_PACKAGE_uugamebooster is not set
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_vsftpd-alt is not set
          # CONFIG_PACKAGE_wol is not set
          # CONFIG_PACKAGE_wsdd2 is not set
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_TARGET_KERNEL_PARTSIZE=80
          CONFIG_TARGET_ROOTFS_PARTSIZE=1500
          CONFIG_UnblockNeteaseMusic_NodeJS=y
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: 下载
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: 编译软件包
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: 准备
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: 提供 buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: 提供 package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: 提供固件
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: 上传
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
